<div class="container">
	
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	<script src="http://d3js.org/topojson.v1.min.js"></script>
	<script>

		var temp = d3.select('.container').style("width");
		var newWidth = parseInt(temp.substring(0, temp.length - 2));
		var width = parseInt(temp.substring(0, temp.length - 2)),
			height = width * .55;

		var data = {
		    name: 'alabama',
            fileName: 'alabama-simple.json',
		    scale: 7000,
		    translate: [-390, -430],
            rotate: "rotate(4.9)"
		}

		var projection = d3.geo.albers()
			.scale(data.scale)
			.translate(data.translate);

		var path = d3.geo.path()
			.projection(projection);
		var svg = d3.select(".container").append("svg")
			.attr("width", width)
			.attr("height", height)
			.classed("county-heatmap", true);

		var g = svg.append("g");	

		var zoom = d3.behavior.zoom()
			.on("zoom", function() {
				g.attr("transform","translate("+d3.event.translate.join(",")+")scale("+d3.event.scale+")");
				console.log()
			});

		svg.call(zoom);

		d3.json("/js/" + data.fileName, function(error, topology) {
			if (error) {
				throw error;
			}

			g.selectAll("path")
				.data(topojson.feature(topology, topology.objects[data.name]).features)
				.enter().append("path")
                .attr("d", path)
                .attr("id", function (d) {
                    return d.properties.NAME;
                })
				.attr("transform", function(d) {
				    return data.rotate;
				});		
		});

	</script>

	<script>
	$(document).ready(function() {

	});
	</script>
	
</div>